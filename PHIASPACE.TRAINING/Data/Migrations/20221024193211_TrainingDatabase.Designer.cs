// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PHIASPACE.TRAINING.DAL.Model;

#nullable disable

namespace PHIASPACE.TRAINING.Data.Migrations
{
    [DbContext(typeof(PhiaSpaceTrainingContext))]
    [Migration("20221024193211_TrainingDatabase")]
    partial class TrainingDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblCertificate", b =>
                {
                    b.Property<int>("CertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificateId"), 1L, 1);

                    b.Property<string>("CertStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentificationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PersonIdentificationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TrainingId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CertificateId");

                    b.HasIndex(new[] { "CourseId" }, "IX_Tbl_Certificate_CourseId");

                    b.HasIndex(new[] { "PersonIdentificationCode" }, "IX_Tbl_Certificate_PersonIdentificationCode");

                    b.HasIndex(new[] { "TrainingId" }, "IX_Tbl_Certificate_TrainingId");

                    b.ToTable("Tbl_Certificate", (string)null);
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblCourse", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"), 1L, 1);

                    b.Property<int?>("CertificateType")
                        .HasColumnType("int");

                    b.Property<int?>("CmeUnits")
                        .HasColumnType("int");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DurationDays")
                        .HasColumnType("int");

                    b.Property<double?>("PassScore")
                        .HasColumnType("float");

                    b.Property<string>("ThematicArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ValidityPeriodMonths")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.ToTable("Tbl_Course", (string)null);
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblDistrict", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistrictId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DistrictId");

                    b.HasIndex(new[] { "ProvinceId" }, "IX_Tbl_District_ProvinceId");

                    b.ToTable("Tbl_District", (string)null);
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblFacility", b =>
                {
                    b.Property<int>("FacilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacilityId"), 1L, 1);

                    b.Property<int?>("ClassificationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("(N'')");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("FacilityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<int?>("LevelId")
                        .HasColumnType("int");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("(N'')");

                    b.Property<string>("UsCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FacilityId");

                    b.HasIndex(new[] { "ClassificationId" }, "IX_Tbl_Facility_ClassificationId");

                    b.HasIndex(new[] { "DistrictId" }, "IX_Tbl_Facility_DistrictId");

                    b.HasIndex(new[] { "LevelId" }, "IX_Tbl_Facility_LevelId");

                    b.HasIndex(new[] { "ProvinceId" }, "IX_Tbl_Facility_ProvinceId");

                    b.HasIndex(new[] { "TypeId" }, "IX_Tbl_Facility_TypeId");

                    b.ToTable("Tbl_Facility", (string)null);
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblFacilityClassification", b =>
                {
                    b.Property<int>("ClassificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassificationId"), 1L, 1);

                    b.Property<string>("ClassificationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassificationId");

                    b.ToTable("Tbl_FacilityClassification", (string)null);
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblFacilityLevel", b =>
                {
                    b.Property<int>("LevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LevelId"), 1L, 1);

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LevelId");

                    b.ToTable("Tbl_FacilityLevel", (string)null);
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblFacilityTransfer", b =>
                {
                    b.Property<int>("TransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransferId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacilityId")
                        .HasColumnType("int");

                    b.Property<string>("IdentificationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonIdentificationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("TransferIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransferId");

                    b.HasIndex(new[] { "FacilityId" }, "IX_Tbl_FacilityTransfers_FacilityId");

                    b.HasIndex(new[] { "PersonIdentificationCode" }, "IX_Tbl_FacilityTransfers_PersonIdentificationCode");

                    b.ToTable("Tbl_FacilityTransfers", (string)null);
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblFacilityType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"), 1L, 1);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeId");

                    b.ToTable("Tbl_FacilityType", (string)null);
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblLookup", b =>
                {
                    b.Property<int>("LookupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LookupId"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<string>("LookupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LookupId");

                    b.ToTable("Tbl_Lookup", (string)null);
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblPerson", b =>
                {
                    b.Property<string>("IdentificationCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacilityId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfessionId")
                        .HasColumnType("int");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<int?>("Sex")
                        .HasColumnType("int");

                    b.Property<int>("TblFacilityFacilityId")
                        .HasColumnType("int");

                    b.Property<int?>("Title")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentificationCode");

                    b.HasIndex(new[] { "DistrictId" }, "IX_Tbl_Persons_DistrictId");

                    b.HasIndex(new[] { "ProfessionId" }, "IX_Tbl_Persons_ProfessionId");

                    b.HasIndex(new[] { "ProvinceId" }, "IX_Tbl_Persons_ProvinceId");

                    b.HasIndex(new[] { "TblFacilityFacilityId" }, "IX_Tbl_Persons_TblFacilityFacilityId");

                    b.ToTable("Tbl_Persons", (string)null);
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblProfession", b =>
                {
                    b.Property<int>("ProfessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfessionId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfessionId");

                    b.ToTable("Tbl_Profession", (string)null);
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblProvince", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProvinceId"), 1L, 1);

                    b.Property<string>("Capital")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<string>("MapCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProvinceId");

                    b.ToTable("Tbl_Province", (string)null);
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblTraining", b =>
                {
                    b.Property<int>("TrainingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainingId"), 1L, 1);

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExpectedParticipants")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Statusmessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trainingstatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VenueId")
                        .HasColumnType("int");

                    b.HasKey("TrainingId");

                    b.HasIndex(new[] { "CourseId" }, "IX_Tbl_Training_CourseId");

                    b.HasIndex(new[] { "VenueId" }, "IX_Tbl_Training_VenueId");

                    b.ToTable("Tbl_Training", (string)null);
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblTrainingFacilitator", b =>
                {
                    b.Property<int>("FacilitatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacilitatorId"), 1L, 1);

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<string>("IdentificationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonIdentificationCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainingId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FacilitatorId");

                    b.HasIndex(new[] { "PersonIdentificationCode" }, "IX_Tbl_TrainingFacilitator_PersonIdentificationCode");

                    b.HasIndex(new[] { "TrainingId" }, "IX_Tbl_TrainingFacilitator_TrainingId");

                    b.ToTable("Tbl_TrainingFacilitator", (string)null);
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblTrainingParticipant", b =>
                {
                    b.Property<int>("ParticipantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParticipantId"), 1L, 1);

                    b.Property<int?>("CompletionStatus")
                        .HasColumnType("int");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<double?>("FinalScore")
                        .HasColumnType("float");

                    b.Property<string>("IdentificationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonIdentificationCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("PostTestScore")
                        .HasColumnType("float");

                    b.Property<double?>("PreTestScore")
                        .HasColumnType("float");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainingId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ParticipantId");

                    b.HasIndex(new[] { "PersonIdentificationCode" }, "IX_Tbl_TrainingParticipant_PersonIdentificationCode");

                    b.HasIndex(new[] { "TrainingId" }, "IX_Tbl_TrainingParticipant_TrainingId");

                    b.ToTable("Tbl_TrainingParticipant", (string)null);
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblVenue", b =>
                {
                    b.Property<int>("VenueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VenueId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Deleted")
                        .HasColumnType("int");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VenueName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VenueId");

                    b.HasIndex(new[] { "DistrictId" }, "IX_Tbl_Venue_DistrictId");

                    b.HasIndex(new[] { "ProvinceId" }, "IX_Tbl_Venue_ProvinceId");

                    b.ToTable("Tbl_Venue", (string)null);
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblCertificate", b =>
                {
                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblCourse", "Course")
                        .WithMany("TblCertificates")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblPerson", "PersonIdentificationCodeNavigation")
                        .WithMany("TblCertificates")
                        .HasForeignKey("PersonIdentificationCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblTraining", "Training")
                        .WithMany("TblCertificates")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("PersonIdentificationCodeNavigation");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblDistrict", b =>
                {
                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblProvince", "Province")
                        .WithMany("TblDistricts")
                        .HasForeignKey("ProvinceId");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblFacility", b =>
                {
                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblFacilityClassification", "Classification")
                        .WithMany("TblFacilities")
                        .HasForeignKey("ClassificationId");

                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblDistrict", "District")
                        .WithMany("TblFacilities")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblFacilityLevel", "Level")
                        .WithMany("TblFacilities")
                        .HasForeignKey("LevelId");

                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblProvince", "Province")
                        .WithMany("TblFacilities")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblFacilityType", "Type")
                        .WithMany("TblFacilities")
                        .HasForeignKey("TypeId");

                    b.Navigation("Classification");

                    b.Navigation("District");

                    b.Navigation("Level");

                    b.Navigation("Province");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblFacilityTransfer", b =>
                {
                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblFacility", "Facility")
                        .WithMany("TblFacilityTransfers")
                        .HasForeignKey("FacilityId")
                        .IsRequired();

                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblPerson", "PersonIdentificationCodeNavigation")
                        .WithMany("TblFacilityTransfers")
                        .HasForeignKey("PersonIdentificationCode")
                        .IsRequired();

                    b.Navigation("Facility");

                    b.Navigation("PersonIdentificationCodeNavigation");
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblPerson", b =>
                {
                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblDistrict", "District")
                        .WithMany("TblPeople")
                        .HasForeignKey("DistrictId");

                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblProfession", "Profession")
                        .WithMany("TblPeople")
                        .HasForeignKey("ProfessionId");

                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblProvince", "Province")
                        .WithMany("TblPeople")
                        .HasForeignKey("ProvinceId");

                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblFacility", "TblFacilityFacility")
                        .WithMany("TblPeople")
                        .HasForeignKey("TblFacilityFacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Profession");

                    b.Navigation("Province");

                    b.Navigation("TblFacilityFacility");
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblTraining", b =>
                {
                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblCourse", "Course")
                        .WithMany("TblTrainings")
                        .HasForeignKey("CourseId");

                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblVenue", "Venue")
                        .WithMany("TblTrainings")
                        .HasForeignKey("VenueId");

                    b.Navigation("Course");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblTrainingFacilitator", b =>
                {
                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblPerson", "PersonIdentificationCodeNavigation")
                        .WithMany("TblTrainingFacilitators")
                        .HasForeignKey("PersonIdentificationCode");

                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblTraining", "Training")
                        .WithMany("TblTrainingFacilitators")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonIdentificationCodeNavigation");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblTrainingParticipant", b =>
                {
                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblPerson", "PersonIdentificationCodeNavigation")
                        .WithMany("TblTrainingParticipants")
                        .HasForeignKey("PersonIdentificationCode");

                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblTraining", "Training")
                        .WithMany("TblTrainingParticipants")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonIdentificationCodeNavigation");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblVenue", b =>
                {
                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblDistrict", "District")
                        .WithMany("TblVenues")
                        .HasForeignKey("DistrictId");

                    b.HasOne("PHIASPACE.TRAINING.DAL.Model.TblProvince", "Province")
                        .WithMany("TblVenues")
                        .HasForeignKey("ProvinceId");

                    b.Navigation("District");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblCourse", b =>
                {
                    b.Navigation("TblCertificates");

                    b.Navigation("TblTrainings");
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblDistrict", b =>
                {
                    b.Navigation("TblFacilities");

                    b.Navigation("TblPeople");

                    b.Navigation("TblVenues");
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblFacility", b =>
                {
                    b.Navigation("TblFacilityTransfers");

                    b.Navigation("TblPeople");
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblFacilityClassification", b =>
                {
                    b.Navigation("TblFacilities");
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblFacilityLevel", b =>
                {
                    b.Navigation("TblFacilities");
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblFacilityType", b =>
                {
                    b.Navigation("TblFacilities");
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblPerson", b =>
                {
                    b.Navigation("TblCertificates");

                    b.Navigation("TblFacilityTransfers");

                    b.Navigation("TblTrainingFacilitators");

                    b.Navigation("TblTrainingParticipants");
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblProfession", b =>
                {
                    b.Navigation("TblPeople");
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblProvince", b =>
                {
                    b.Navigation("TblDistricts");

                    b.Navigation("TblFacilities");

                    b.Navigation("TblPeople");

                    b.Navigation("TblVenues");
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblTraining", b =>
                {
                    b.Navigation("TblCertificates");

                    b.Navigation("TblTrainingFacilitators");

                    b.Navigation("TblTrainingParticipants");
                });

            modelBuilder.Entity("PHIASPACE.TRAINING.DAL.Model.TblVenue", b =>
                {
                    b.Navigation("TblTrainings");
                });
#pragma warning restore 612, 618
        }
    }
}
