@{
    ViewData["Title"] = "Course";
}
<div class="page-title-box d-flex align-items-center justify-content-between">
    <div class="page-title-right">
        <ol class="breadcrumb m-0">
            <li class="breadcrumb-item"><a asp-controller="Course" asp-action="Index">Course</a></li>
            <li class="breadcrumb-item active">All Courses</li>
        </ol>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header">
                
                <div class="row">
                    <div class="col-sm-8">
                        <div class="search-box me-2 d-inline-block">
                            <div class="position-relative">
                                <h4 class="card-title">Courses</h4>
                                <p class="card-title-desc">List of all active courses</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="text-sm-end">
                            <a asp-controller="Course" asp-action="Create" class="btn btn-primary btn-rounded waves-effect waves-light me-2"><i class="mdi mdi-plus me-1"></i> Add New Course</a>
                        </div>
                    </div><!-- end col-->
                </div>
            </div><!-- end card header -->
            <div class="card-body">
                <div id="app_list"></div>
            </div>
            <!-- end card body -->
        </div>
        <!-- end card -->
    </div>
    <!-- end col -->
</div>

@section Styles{
    <link rel="stylesheet" href="~/public/assets/libs/gridjs/theme/mermaid.min.css">
}

@section Scripts{
    <script src="~/public/assets/libs/gridjs/gridjs.umd.js"></script>
    <script src="public/assets/libs/alertifyjs/build/alertify.min.js"></script>
    <script>
        var date_options = { year: 'numeric', month: 'short', day: 'numeric' };
        const grid = new gridjs.Grid({
            columns: ['Course Name', 'Create At', 'Validity Period', 'Duration', 'Pass Score',
            {
                name: 'Action',
                formatter: (_, row) =>
                {
                    return gridjs.html(`<a href="Course/Edit/${row.cells[5].data}" class="btn btn-sm btn-info">Edit</a>
                        <a href="Course/Deactivate/${row.cells[5].data}" class="btn btn-sm btn-danger">Delete</a>`);
                }
            }
            ],  
            pagination: {
                enabled: true,
                limit: 10,
                server: {
                    url: (prev, page, limit) => {
                        if(prev.includes("?"))
                            return `${prev}&limit=${limit}&offset=${page * limit}`;
                        else
                            return `${prev}?limit=${limit}&offset=${page * limit}`
                    } 
                }
            },
            sort: {
                multiColumn: false,
                server: {
                    url: (prev, columns) => {
                        if (!columns.length) return prev;                    
                        const col = columns[0];
                        const dir = col.direction === 1 ? 'asc' : 'desc';
                        let colName = ['CourseName', 'CreateAt', 'ValidityPeriod', 'Duration', 'PassScore'][col.index];
                        if(prev.includes("?"))
                            return `${prev}&order=${colName}&direction=${dir}`;
                        else
                            return `${prev}?order=${colName}&direction=${dir}`;
                    }
                }
            },
            search: {
                server: {
                    url: (prev, keyword) => `${prev}?search=${keyword}`
                }
            },       
            resizable: true,
            server: {
                url: '/Course/GetActiveCourses',
                then: data => data.records.map(card => [card.courseName, new Date(card.dateCreated).toLocaleDateString("en-US", date_options), card.validityPeriodMonths, card.durationDays, card.passScore, [card.courseId]])
            } 
        }).render(document.getElementById('app_list'));
        
    </script>
}