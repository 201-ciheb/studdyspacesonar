name: Sonar Scans

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

jobs:
  changes:
    name: Check for Changed Services
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            PHIASPACE.API: PHIASPACE.API/**
            PHIASPACE.CORE: PHIASPACE.CORE/**
            PHIASPACE.INCIDENCE: PHIASPACE.INCIDENCE/**
            PHIASPACE.INTERFACE: PHIASPACE.INTERFACE/**
            PHIASPACE.LINKAGE: PHIASPACE.LINKAGE/**
            PHIASPACE.MAPPINGLISTING: PHIASPACE.MAPPINGLISTING/**
            PHIASPACE.RTDMS: PHIASPACE.RTDMS/**
            PHIASPACE.SAMPLEMODULE: PHIASPACE.SAMPLEMODULE/**
            PHIASPACE.TICKETING: PHIASPACE.TICKETING/**
            PHIASPACE.TRAINING: PHIASPACE.TRAINING/**
    outputs:
      packages: ${{ steps.filter.outputs.changes }}

  build_and_analyze:
    name: Build And Analyze Apps
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.packages != '[]' && needs.changes.outputs.packages != '' }}
    needs: changes
    strategy:
      matrix:
        package: ${{ fromJSON(needs.changes.outputs.packages) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      ################### .NET CORE SETUP ##########################
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0'

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: ${{ runner.os }}-nuget

      - name: Install dependencies
        run: dotnet restore

      ################### SONAR SCAN ##########################
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Run Sonar Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.G201ITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet build ${{ matrix.package }} --configuration Release
          dotnet test ${{ matrix.package }} --no-build --configuration Release
          dotnet sonarscanner begin /k:"your_sonar_project_key" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          dotnet build ${{ matrix.package }}
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
